# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    tags:
      - 'v*.*.*' # Push events to matching v*, i.e. v1.0, v20.15.10    

jobs:

  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -ldflags -H=windowsgui -v ./...

    - name: version
      run: echo "::set-output name=version::$(multisteamaccount --version)"
      id: version


    - name: Test
      run: go test -ldflags -H=windowsgui -v ./...
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref}}
        release_name: Release ${{ steps.version.outputs.version }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false      
      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./multisteamaccount.windows-amd64.zip
        asset_name: multisteamaccount.windows-amd64.zip
        asset_content_type: application/zip  
    
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run a once-line script
        run: echo Deploy dev
